<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.spring.web.dao.PersonalDao">
	
	<select id="showBlogContents" resultType="BlogContentsDto" parameterType="String"> 
		select *
		from blogcontents 
		where blog_id = #{blogId} and isdeleted = 0
	</select>
	
	<select id="showMemo" resultType="MemoContentsDto" parameterType="String">
		select * 
		from memocontents
		where memo_id = #{memoId} and isdeleted = 0
	</select>
	
	<select id="likeBloger" resultType="BlogDto" parameterType="String">
		select * 
		from blog inner join blogerlike using (blog_id)
		where blogerlike.uid = #{uid};
	</select>
	
	<select id="likeBlogContents" resultType="BlogContentsDto" parameterType="String">
		select * 
		from blogcontents inner join blogcontentslike using (blog_contents_id)
		where blogcontentslike.uid = #{uid};
	</select>
	
	<select id="jandi" resultType="JandiDto" parameterType="String">
		select Date(blog_datetime) as blogDatetime, count(*) as jandiCnt
		from blogcontents
		where blog_id=#{blogId} and isdeleted = 0
		group by Date(blog_datetime);
	</select>
	
	<select id="usergraph" resultType="usergraphDto" parameterType="String">
		select Date(usergraph_date) as usergraphDate, count(*) as blogView
		from usergraph
		where blog_id=#{blogId}
		group by Date(usergraph_date);
	</select>
	
	<insert id="usergraphViewCount" parameterType="String">
		insert into usergraph(blog_id, usergraph_date, blog_view) 
		values(#{blogId}, now(), 0);
	</insert>
	
	<insert id="blogerLike" parameterType = "BlogerLikeDto">
		insert into blogerlike(uid, blog_id)
		values(#{uid}, #{blogId})
	</insert>
	
	<delete id="blogerUnlike" parameterType = "BlogerLikeDto">
		delete from blogerlike
		where uid = #{uid} and blog_id = #{blogId}
	</delete>
	
	<select id="readBlogerLike" resultType="BlogerLikeDto">
		select *
		from blogerlike
		where uid = #{uid} and blog_id = #{blogId}
	</select>
</mapper>