<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.web.dao.SearchPostDao">

	<select id="searchPost" parameterType="SearchParam" resultType="BlogPostDto">
		select bc.blog_id,
				bc.blog_contents_id, bc.blog_contents_title,
				bc.blog_contents,
				bc.blog_contents_view, bc.blog_contents_like,
				case when date_format(blog_datetime, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(blog_datetime, '%H:%i:%s')
				else date_format(blog_datetime, '%y.%m.%d')
				end blog_datetime,
				bc.blog_contents_cover, info.nickname, info.profile, ifnull(c.comment_cnt, 0 ) comment_cnt
		from blogcontents bc inner join user u
				on bc.blog_id = u.blog_id
			inner join userinfo info
				on u.uid = info.uid
			left join ( 
						select count(*) comment_cnt, blog_contents_id
                        from comment
                        where isdeleted = 0
                        group by blog_contents_id
                        ) c
			on bc.blog_contents_id = c.blog_contents_id
		where bc.isdeleted = 0 and u.isdeleted = 0
		<if test="keyword != null and keyword != ''">
			and ( bc.blog_contents_title like concat('%', #{keyword}, '%')
			or bc.blog_contents like concat('%', #{keyword}, '%') )
		</if>
		order by blog_contents_id DESC
		limit #{start}, #{spp};
	</select>
	
	
	<select id="searchPostByTag" parameterType="SearchParam" resultType="BlogPostDto">
		select tag.hashtag_content, bc.blog_id,
			bc.blog_contents_id, bc.blog_contents_title,
			bc.blog_contents,
			bc.blog_contents_view, bc.blog_contents_like,
			case when date_format(blog_datetime, '%Y%m%d') = date_format(now(), '%Y%m%d')
			then date_format(blog_datetime, '%H:%i:%s')
			else date_format(blog_datetime, '%y.%m.%d')
			end blog_datetime,
			bc.blog_contents_cover, info.nickname, info.profile, ifnull(co.comment_cnt, 0 ) comment_cnt
		from hashtag tag
			inner join bloghashtag bh
		    on tag.hashtag_id = bh.hashtag_id
		    inner join blogcontents bc
		    on bc.blog_contents_id = bh.blog_contents_id
		    inner join user u
		    on bc.blog_id = u.blog_id
		    inner join userinfo info
		    on u.uid = info.uid
		    left join ( 
					select count(*) comment_cnt, blog_contents_id
					from comment
					where isdeleted = 0
					group by blog_contents_id ) co
			on bc.blog_contents_id = co.blog_contents_id
		 where bc.isdeleted = 0 and u.isdeleted = 0 and tag.hashtag_content like '%s%'
		
		<if test="keyword != null and keyword != ''">
			and tag.hashtag_content like concat('%', #{keyword}, '%')
		</if>
		order by blog_contents_id DESC
		limit #{start}, #{spp};
	</select>



</mapper>